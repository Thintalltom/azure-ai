// var e="./";const t=e+"facelivenessdetector-assets/images/Smile.gif",i=e+"facelivenessdetector-assets/images/Brightness.svg",s=e+"facelivenessdetector-assets/images/Tip1Center.png",o=e+"facelivenessdetector-assets/images/Tip2Smile.png",a=e+"facelivenessdetector-assets/images/Tip3TurnHead.png",n=e+"facelivenessdetector-assets/images/Up.gif",r=e+"facelivenessdetector-assets/images/UpRight.gif",h=e+"facelivenessdetector-assets/images/UpLeft.gif",c=e+"facelivenessdetector-assets/images/Right.gif",d=e+"facelivenessdetector-assets/images/Left.gif",l=e+"facelivenessdetector-assets/images/Down.gif",u=e+"facelivenessdetector-assets/images/DownRight.gif",p=e+"facelivenessdetector-assets/images/DownLeft.gif",m=e+"facelivenessdetector-assets/html/shadowRoot.html",g=e+"facelivenessdetector-assets/css/styles.css",v={None:"Hold still.",LookAtCamera:"Look at camera.",FaceNotCentered:"Center your face in the circle.",MoveCloser:"Too far away! Move in closer.",ContinueToMoveCloser:"Continue to move closer.",MoveBack:"Too close! Move farther away.",TooMuchMovement:"Too much movement.",AttentionNotNeeded:"",Smile:"Smile for the camera!",LookInFront:"Look in front.",LookUp:"Look up.",LookUpRight:"Look up-right.",LookUpLeft:"Look up-left.",LookRight:"Look right.",LookLeft:"Look left.",LookDown:"Look down.",LookDownRight:"Look down-right.",LookDownLeft:"Look down-left.",TimedOut:"Timed out.",IncreaseBrightnessToMax:"Increase your screen brightness to maximum.",Tip1Title:"Tip 1:",Tip2Title:"Tip 2:",Tip3Title:"Tip 3:",Tip1:" Do not Center your face in the preview. Make sure your eyes and mouth are visible, remove any obstructions like headphones.",Tip2:"You may be asked not to smile.",Tip3:"You may be asked to turn your nose towards the green color.",Continue:"Continue"},f={en:v,pt:{None:"Fique parado.",LookAtCamera:"Olhe para a câmera.",FaceNotCentered:"Centralize seu rosto no círculo.",MoveCloser:"Está muito longe! Aproxime-se.",ContinueToMoveCloser:"Continue se aproximando.",MoveBack:"Está muito perto! Afaste-se.",TooMuchMovement:"Muito movimento.",AttentionNotNeeded:"",Smile:"Sorria para a câmera!",LookInFront:"Olhe para frente.",LookUp:"Olhe para cima.",LookUpRight:"Olhe para cima e para a direita.",LookUpLeft:"Olhe para cima e para a esquerda.",LookRight:"Olhe para a direita.",LookLeft:"Olhe para a esquerda.",LookDown:"Olhe para baixo.",LookDownRight:"Olhe para baixo e para a direita.",LookDownLeft:"Olhe para baixo e para a esquerda.",TimedOut:"Tempo esgotado.",IncreaseBrightnessToMax:"Aumente o brilho da tela para o máximo.",Tip1Title:"Dica 1:",Tip2Title:"Dica 2:",Tip3Title:"Dica 3:",Tip1:"Centralize seu rosto na pré-visualização. Certifique-se de que seus olhos e boca estejam visíveis, remova quaisquer obstruções como fones de ouvido.",Tip2:"Você pode ser solicitado a sorrir.",Tip3:"Pode ser solicitado que você vire o nariz em direção à cor verde.",Continue:"Continuar"},fa:{None:"ساکن بمانید.",LookAtCamera:"به دوربین نگاه کنید.",FaceNotCentered:"صورت خود را در دایره قرار دهید.",MoveCloser:"خیلی دور هستید! نزدیک‌تر شوید.",ContinueToMoveCloser:"ادامه دهید تا نزدیک‌تر شوید.",MoveBack:"خیلی نزدیک هستید! دور شوید.",TooMuchMovement:"حرکت زیاد است.",AttentionNotNeeded:"",Smile:"لبخند بزنید به دوربین!",LookInFront:"رو به جلو نگاه کنید.",LookUp:"به بالا نگاه کنید.",LookUpRight:"به بالا و راست نگاه کنید.",LookUpLeft:"به بالا و چپ نگاه کنید.",LookRight:"به راست نگاه کنید.",LookLeft:"به چپ نگاه کنید.",LookDown:"به پایین نگاه کنید.",LookDownRight:"به پایین و راست نگاه کنید.",LookDownLeft:"به پایین و چپ نگاه کنید.",TimedOut:"زمان به پایان رسید.",IncreaseBrightnessToMax:"روشنایی صفحه را به حداکثر افزایش دهید.",Tip1Title:"نکته 1:",Tip2Title:"نکته 2:",Tip3Title:"نکته 3:",Tip1:"صورت خود را در پیش نمایش مرکز کنید. اطمینان حاصل کنید که چشمان و دهانتان قابل مشاهده باشد؛ موانعی مانند هدفون را بردارید.",Tip2:"ممکن است از شما خواسته شود لبخند بزنید.",Tip3:"ممکن است از شما خواسته شود که بینی خود را به سمت رنگ سبز بچرخانید.",Continue:"ادامه دهید"}},y=["ar","arc","dv","fa","ha","he","khw","ks","ku","ps","ur","yi"];var k="AzureAIVisionFace_SIMD.js";try{0==WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))&&(k="AzureAIVisionFace.js")}catch(e){k="AzureAIVisionFace.js"}const L=(e,t)=>{for(const i in e)if(e[i]===t)return i;return null};class w extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.attentionNotNeededReceived=!1,this.analyzingReceived=!1,this.cameraStopped=!1,this.start=this.start.bind(this),this.actionName="",this._brightnessImagePath="",this._continueButtonStyles="",this._feedbackMessageStyles="",this._fontSize="",this._fontFamily="",this._languageDictionary=v,this.isRtl=!1,this._baseAssetsURL="./",this._mediaInfoDeviceId="",this._skipInstructions=!0,this.isDefined=!1,this.authToken=""}set brightnessImagePath(e){this._brightnessImagePath=e}set fontSize(e){this._fontSize=e}set fontFamily(e){this._fontFamily=e}set buttonStyles(e){this._continueButtonStyles=e}set feedbackMessageStyles(e){this._feedbackMessageStyles=e}set locale(e){f.hasOwnProperty(e)&&(this._languageDictionary=f[e]),y.includes(e)&&(this.isRtl=!0)}set languageDictionary(e){this._languageDictionary=e||v}set mediaInfoDeviceId(e){this._mediaInfoDeviceId=e}set skipInstructions(e){this._skipInstructions=e}mapFeedbackToMessage(e){return this._languageDictionary.hasOwnProperty(e)?this._languageDictionary[e]:e}analyzing(e){if(this.analyzingReceived||(this.spinnerCheckContainer.style.display="none",this.spinnerCheck.classList.add("hidden")),this.analyzingReceived=!0,e.isActionValid)switch(e.action){case Module.ActionRequiredFromApplication.BrightenDisplay:this.parentContainer.style.background="white";break;case Module.ActionRequiredFromApplication.DarkenDisplay:this.parentContainer.style.background="black";break;case Module.ActionRequiredFromApplication.PromptForActiveMotion:this.faceAnalyzer.continueWithActiveMotion();break;case Module.ActionRequiredFromApplication.ShowSmile:this.activeMotionImg.classList.remove("hidden"),!this.video.classList.contains("overlay")&&this.video.classList.add("overlay"),this.parentContainer.style.background="white",this.activeMotionImg.src=t;break;case Module.ActionRequiredFromApplication.LookUp:this.activeMotionImg.src=n,this.showAction("up");break;case Module.ActionRequiredFromApplication.LookUpRight:this.activeMotionImg.src=r,this.showAction("upRight");break;case Module.ActionRequiredFromApplication.LookUpLeft:this.activeMotionImg.src=h,this.showAction("upLeft");break;case Module.ActionRequiredFromApplication.LookRight:this.activeMotionImg.src=c,this.showAction("right");break;case Module.ActionRequiredFromApplication.LookLeft:this.activeMotionImg.src=d,this.showAction("left");break;case Module.ActionRequiredFromApplication.LookDown:this.activeMotionImg.src=l,this.showAction("down");break;case Module.ActionRequiredFromApplication.LookDownRight:this.activeMotionImg.src=u,this.showAction("downRight");break;case Module.ActionRequiredFromApplication.LookDownLeft:this.activeMotionImg.src=p,this.showAction("downLeft");break;case Module.ActionRequiredFromApplication.ActionDetails:e.isActionDetailsValid&&e.details.dwellStarted&&(this.pose.classList.remove("active"),this.pose.classList.add("active"));break;case Module.ActionRequiredFromApplication.StopCamera:if(this.video.paused||this.video.pause(),this.video.srcObject instanceof MediaStream)for(const e of this.video.srcObject.getTracks())e.stop();this.cameraStopped||(this.cameraStopped=!0,this.video.setAttribute("invisible",!0),this.video.classList.remove("overlay"),this.videoContainer.hidden=!0,this.activeMotionImg.setAttribute("data-id",""),this.pose.removeAttribute("class"),this.pose.setAttribute("class","pose"),this.pose.hidden=!0,this.spinnerCheck.removeAttribute("class"),this.spinnerCheck.setAttribute("class","hidden"))}if(!this.attentionNotNeededReceived&&e.isFeedbackValid){var i=L(Module.FeedbackForFace,e.feedback);this.feedback.innerText=this.mapFeedbackToMessage(i)}e.feedback==Module.FeedbackForFace.AttentionNotNeeded&&(this.camera.hidden=!0,this.showSpinnerCheck(!0),this.parentContainer.style.background="white",this.attentionNotNeededReceived=!0)}showAction(e){this.activeMotionImg.classList.remove("hidden"),!this.video.classList.contains("overlay")&&this.video.classList.add("overlay"),this.pose.hidden=!1,this.pose.removeAttribute("class"),this.pose.setAttribute("class","pose "+e),this.actionName=e}showSpinnerCheck(e){this.spinnerCheckContainer.style.display="flex",this.spinnerCheck.classList.add("progress"),this.spinnerCheck.style.marginTop=e?"240px":"40px",this.spinnerCheck.classList.remove("hidden")}finishSession(e){if(e){for(const e of this.spinnerCheck.classList.values())this.spinnerCheck.classList.remove(e);this.spinnerCheck.classList.add("hidden")}else this.spinnerCheck.classList.remove("progress"),this.spinnerCheck.classList.add("ready");if(this.parentContainer.style.background="white",this.parentContainer.hidden=!0,this.activeMotionImg.classList.add("hidden"),this.feedback.innerText="",this.camera.hidden=!0,this.feedbackMessage.hidden=!0,this.faceAnalyzer.callAttemptEnd(),this.video.paused||this.video.pause(),this.video.srcObject instanceof MediaStream)for(const e of this.video.srcObject.getTracks())e.stop();this.video.srcObject=null,this.faceAnalyzer.delete(),this.startElement.removeEventListener("click",this.startSession)}sendError(e){this.finishSession(!0),this.rejectStartPromise(e),this.cleanupPromises()}analyzed(e,t){if(0!=e.livenessResult.failureReason?.value||0!=e.recognitionResult.failureReason?.value){const t={livenessError:L(Module.LivenessFailureReason,e.livenessResult.failureReason),recognitionError:L(Module.RecognitionFailureReason,e.recognitionResult.failureReason)};this.sendError(t)}else{this.finishSession(t);const i={livenessStatus:L(Module.LivenessStatus,e.livenessResult.status),recognitionResult:{status:L(Module.RecognitionStatus,e.recognitionResult.status),matchConfidence:e.recognitionResult.confidence},resultId:e.livenessResult.resultId,digest:e.livenessResult.digest};this.resolveStartPromise(i),this.cleanupPromises()}}start=async e=>{if(this.authToken=e,this.isDefined=await this.checkModuleDefined(1e3,15),this.isDefined){this.attentionNotNeededReceived=!1,this.analyzingReceived=!1,this.cameraStopped=!1,this.video.classList.remove("overlay"),this.videoContainer.hidden=!1,this.activeMotionImg.removeAttribute("src"),this.pose.hidden=!0,this.spinnerCheck.classList.remove("progress"),this.spinnerCheck.classList.remove("ready"),this.spinnerCheck.classList.add("hidden"),this.parentContainer.removeAttribute("hidden"),this.shadow.getElementById("brightness").removeAttribute("hidden");for(const e of this.shadow.querySelectorAll("#pose img"))e.classList.add("hidden");""!==this._brightnessImagePath?this.shadow.getElementById("brightnessImg").src=this._brightnessImagePath:this.shadow.getElementById("brightnessImg").src=i,""!==this._fontSize&&this.changeFontSize(this._fontSize),""!==this._fontFamily&&this.changeFontFamily(this._fontFamily),""!==this._continueButtonStyles&&(this.startButton=this.shadow.getElementById("startButton"),this.startElement.removeAttribute("class"),this.startButton.removeAttribute("class"),this.startElement.style.cssText=this._continueButtonStyles),""!==this._feedbackMessageStyles&&(this.feedbackMessage.removeAttribute("class"),this.feedbackMessage.style.cssText=this._feedbackMessageStyles,this.feedbackMessage.style.zIndex="2147483646"),this.startElement.addEventListener("click",this.startSession)}return new Promise(((e,t)=>{if(this.resolveStartPromise=e,this.rejectStartPromise=t,!this.isDefined){const e={livenessError:L(Module.LivenessFailureReason,Module.LivenessFailureReason.Unexpected),recognitionError:L(Module.RecognitionFailureReason,Module.RecognitionFailureReason.None)};this.parentContainer.hidden=!0,this.rejectStartPromise(e),this.cleanupPromises()}}))};startSession=async()=>{this.shadow.getElementById("brightness").hidden=!0,this.faceAnalyzer=new Module.FaceRecoEngineAdapter,await this.initializeFaceAnalyzer()};processFrame=()=>{let e=!1;if(1==this.attentionNotNeededReceived)e=this.faceAnalyzer.generatePayloadAndResult();else if(this.video.videoWidth>0){this.canvas.width=this.video.videoWidth,this.canvas.height=this.video.videoHeight;var t=this.canvas.getContext("2d",{willReadFrequently:!0});t.drawImage(this.video,0,0,this.canvas.width,this.canvas.height);var i=t.getImageData(0,0,this.canvas.width,this.canvas.height),s=Module._malloc(i.data.byteLength);Module.HEAPU8.set(i.data,s);var o=this.faceAnalyzer.processFrame(this.canvas.width,this.canvas.height,i.data.byteLength,s);Module._free(s),o.terminate?e=!0:o.isValid&&this.analyzing(o)}e?this.analyzed(this.faceAnalyzer.getFaceAnalyzerResult()):this.animationFrameId=requestAnimationFrame((()=>{this.processFrame()}))};capture=()=>{this.feedbackMessage.style.direction=this.isRtl?"rtl":"ltr",this.video.removeAttribute("invisible"),this.camera.removeAttribute("hidden"),this.feedbackMessage.removeAttribute("hidden"),this.showSpinnerCheck(!1);let e={video:{width:{ideal:1920},height:{ideal:1080},aspectRatio:{ideal:16/9},facingMode:{ideal:"user"}},audio:!1};""!==this._mediaInfoDeviceId&&(e.video.deviceId={exact:this._mediaInfoDeviceId}),navigator.mediaDevices.getUserMedia(e).then((e=>{this.handleStream(e)})).catch((e=>{const t={livenessError:"NotAllowedError"===e.name?L(Module.LivenessFailureReason,Module.LivenessFailureReason.CameraPermissionDenied):L(Module.LivenessFailureReason,Module.LivenessFailureReason.CameraStartupFailure),recognitionError:L(Module.RecognitionFailureReason,Module.RecognitionFailureReason.None)};this.sendError(t)}))};handleStream(e){this.video.srcObject=e,this.video.addEventListener("canplay",(e=>{this.streaming||(this.streaming=!0)}),!1),this.processFrame()}isPassiveOperationModeFromToken(){try{const e=this.authToken.split(".",2),t=e.length>1?e[1]:"",i=atob(t),s=JSON.parse(i);return"Passive"===JSON.parse(s.face).clientClaims.livenessOperationMode}catch(e){return!1}}setLocalizedStrings(e){e.getElementById("brightnessTip1Img").src=s,e.getElementById("brightnessTip2Img").src=o,e.getElementById("brightnessTip3Img").src=a,e.getElementById("brightnessText").innerText=this._languageDictionary.IncreaseBrightnessToMax,e.getElementById("tip1Title").innerText=this._languageDictionary.Tip1Title,e.getElementById("tip1").innerText=this._languageDictionary.Tip1,e.getElementById("tip2Title").innerText=this._languageDictionary.Tip2Title,e.getElementById("tip2").innerText=this._languageDictionary.Tip2,e.getElementById("tip3Title").innerText=this._languageDictionary.Tip3Title,e.getElementById("tip3").innerText=this._languageDictionary.Tip3,e.getElementById("start").innerText=this._languageDictionary.Continue}setGridVisibility(){const e=this.isPassiveOperationModeFromToken(),t=this.shadow.getElementById("brightnessTip2"),i=this.shadow.getElementById("brightnessTip3"),s=this.shadow.getElementById("brightnessTips");e?(t.hidden=!0,i.hidden=!0,s.classList.add("passive-mode")):(t.hidden=!1,i.hidden=!1,s.classList.remove("passive-mode"))}async connectedCallback(){if(this.isConnected)if("undefined"!=typeof Module&&void 0!==Module.FaceRecoEngineAdapter)await this.loadShadowElements(this.shadow);else{const e=this._baseAssetsURL.replace(/\/$/,"")+"/facelivenessdetector-assets/js/";window.Module={locateFile:function(t,i){return t.includes("AzureAIVisionFace")&&t.endsWith(".wasm")?e+t:i+t}};const t=document.createElement("script"),i=new Promise((e=>{t.addEventListener("load",e)}));t.src=e+k,this.shadow.appendChild(t),i.then((async()=>{await this.loadShadowElements()}))}}async loadShadowElements(){const e=document.createElement("style"),t=await fetch(g);if(!t.ok)throw new Error(`Failed to load CSS file: ${t.statusText}`);let i=await t.text();e.textContent=i,this.shadow.appendChild(e);const s=await fetch(m);if(!s.ok)throw new Error(`Failed to load HTML file: ${s.statusText}`);const o=await s.text(),a=document.createElement("div");a.classList.add("parentContainer"),a.setAttribute("id","parentContainer"),a.innerHTML=o,this.shadow.appendChild(a),this.parentContainer=this.shadow.getElementById("parentContainer"),this.activeMotionImg=this.shadow.getElementById("activeMotionImg"),this.camera=this.shadow.getElementById("camera"),this.feedback=this.shadow.getElementById("feedbackForFace"),this.video=this.shadow.getElementById("video"),this.canvas=this.shadow.getElementById("canvas"),this.startElement=this.shadow.getElementById("start"),this.videoContainer=this.shadow.getElementById("videoContainer"),this.pose=this.shadow.getElementById("pose"),this.spinnerCheck=this.shadow.getElementById("check"),this.spinnerCheckContainer=this.shadow.getElementById("spinnerCheck"),this.feedbackMessage=this.shadow.getElementById("feedbackMessage"),this.streaming=!1,this.setLocalizedStrings(this.shadow),this.setGridVisibility()}async checkModuleDefined(e,t){let i=0;for(;i<t;){if(i++,"undefined"!=typeof Module&&void 0!==Module.FaceRecoEngineAdapter&&void 0!==this.feedbackMessage)return!0;await new Promise((t=>setTimeout(t,e)))}return!1}async initializeFaceAnalyzer(){const e=this.authToken.split(".");var t=!1;this.faceAnalyzer.setToken(this.authToken);var i="",s="";let o,a=0;if(3===e.length){const n=JSON.parse(atob(e[1]));if(n.hasOwnProperty("face")){const e=JSON.parse(n.face);if(e&&e.endpoint&&(/^https:\/\/[^/:]+\.(api\.cognitive\.microsoft|cognitiveservices\.azure)\.com$/.test(e.endpoint)||"https://virginia.api.cognitive.microsoft.us"===e.endpoint)){this.faceAnalyzer.setEndpoint(e.endpoint);const r=JSON.parse(n["allowed-paths"]);if(r){const n=r.find((e=>e.path.toLocaleLowerCase().endsWith("/session/start".toLocaleLowerCase())))?.path;this.faceAnalyzer.setSessionStartPath(n);const h=r.find((e=>e.path.toLocaleLowerCase().endsWith("/session/attempt/end".toLocaleLowerCase())))?.path;this.faceAnalyzer.setAttemptEndPath(h);const c=r.find((e=>e.path.toLocaleLowerCase().endsWith("/detectLiveness/singleModal".toLocaleLowerCase())));c&&(({path:i,quota:a}=c),this.faceAnalyzer.setLivenessPath(i));const d=r.find((e=>e.path.toLocaleLowerCase().endsWith("/detectLivenessWithVerify/singleModal".toLocaleLowerCase())));d&&(({path:s,quota:a}=d),this.faceAnalyzer.setLivenessWithVerifyPath(s));const l=new Set(r.map((e=>e.path?.split("/")[1])));1===l.size&&(c||d)&&(t=!0,this.faceAnalyzer.setApiVersion(l.values().next().value)),o=e.clientClaims.livenessOperationMode}}}this.faceAnalyzer.setOperationQuota(a),this.faceAnalyzer.setOperationMode(Module.LivenessOperationMode[o]),n.hasOwnProperty("sid")&&this.faceAnalyzer.setSid(n.sid),n.hasOwnProperty("azure-resource-id")&&this.faceAnalyzer.setResourceId(n["azure-resource-id"])}if(t)this.hasAttribute("active-mode")&&"true"===this.getAttribute("active-mode")&&this.faceAnalyzer.setActiveMode(),this.faceAnalyzer.initialize(),this.capture();else{const e={livenessError:L(Module.LivenessFailureReason,Module.LivenessFailureReason.InvalidToken),recognitionError:L(Module.RecognitionFailureReason,Module.RecognitionFailureReason.None)};this.sendError(e)}}changeFontSize(e){const t=this.shadow.querySelectorAll(".center");for(const i of t)i.style.fontSize=e;const i=this.shadow.querySelectorAll(".feedbackMessage");for(const t of i)t.style.fontSize=e}changeFontFamily(e){const t=this.shadow.querySelectorAll(".center");for(const i of t)i.style.fontFamily=e;const i=this.shadow.querySelectorAll(".feedbackMessage");for(const t of i)t.style.fontFamily=e}cleanupPromises(){"undefined"!==this.resolveStartPromise&&(this.resolveStartPromise=null),"undefined"!==this.rejectStartPromise&&(this.rejectStartPromise=null)}}customElements.define("azure-ai-vision-face-ui",w);export var LivenessStatus;
(function (LivenessStatus) {
  LivenessStatus["RealFace"] = "RealFace";
  LivenessStatus["SpoofFace"] = "SpoofFace";
  LivenessStatus["ResultQueryableFromService"] = "ResultQueryableFromService";
})(LivenessStatus || (LivenessStatus = {}));

export var RecognitionStatus;
(function (RecognitionStatus) {
  RecognitionStatus["Recognized"] = "Recognized";
  RecognitionStatus["NotRecognized"] = "NotRecognized";
  RecognitionStatus["ResultQueryableFromService"] =
    "ResultQueryableFromService";
})(RecognitionStatus || (RecognitionStatus = {}));

export var LivenessError;
(function (LivenessError) {
  LivenessError["None"] = "None";
  LivenessError["TimedOut"] = "TimedOut";
  LivenessError["InvalidToken"] = "InvalidToken";
  LivenessError["CameraPermissionDenied"] = "CameraPermissionDenied";
  LivenessError["CameraStartupFailure"] = "CameraStartupFailure";
  LivenessError["NoFaceDetected"] = "NoFaceDetected";
  LivenessError["FaceTrackingFailed"] = "FaceTrackingFailed";
  LivenessError["SmileNotPerformed"] = "SmileNotPerformed";
  LivenessError["RandomPoseNotPerformed"] = "RandomPoseNotPerformed";
  LivenessError["ServerRequestTimedOut"] = "ServerRequestTimedOut";
  LivenessError["FaceMouthRegionNotVisible"] = "FaceMouthRegionNotVisible";
  LivenessError["FaceEyeRegionNotVisible"] = "FaceEyeRegionNotVisible";
  LivenessError["ExcessiveImageBlurDetected"] = "ExcessiveImageBlurDetected";
  LivenessError["ExcessiveFaceBrightness"] = "ExcessiveFaceBrightness";
  LivenessError["FaceWithMaskDetected"] = "FaceWithMaskDetected";
  LivenessError["EnvironmentNotSupported"] = "EnvironmentNotSupported";
  LivenessError["UserCancelledSession"] = "UserCancelledSession";
  LivenessError["UserCancelledActiveMotion"] = "UserCancelledActiveMotion";
  LivenessError["UnexpectedClientError"] = "UnexpectedClientError";
  LivenessError["UnexpectedServerError"] = "UnexpectedServerError";
  LivenessError["Unexpected"] = "Unexpected";
})(LivenessError || (LivenessError = {}));

export var RecognitionError;
(function (RecognitionError) {
  RecognitionError["None"] = "None";
  RecognitionError["GenericFailure"] = "GenericFailure";
  RecognitionError["FaceNotFrontal"] = "FaceNotFrontal";
  RecognitionError["FaceEyeRegionNotVisible"] = "FaceEyeRegionNotVisible";
  RecognitionError["ExcessiveFaceBrightness"] = "ExcessiveFaceBrightness";
  RecognitionError["ExcessiveImageBlurDetected"] = "ExcessiveImageBlurDetected";
  RecognitionError["FaceNotFound"] = "FaceNotFound";
  RecognitionError["MultipleFaceFound"] = "MultipleFaceFound";
  RecognitionError["ContentDecodingError"] = "ContentDecodingError";
  RecognitionError["ImageSizeIsTooLarge"] = "ImageSizeIsTooLarge";
  RecognitionError["ImageSizeIsTooSmall"] = "ImageSizeIsTooSmall";
  RecognitionError["UnsupportedMediaType"] = "UnsupportedMediaType";
  RecognitionError["FaceMouthRegionNotVisible"] = "FaceMouthRegionNotVisible";
  RecognitionError["FaceWithMaskDetected"] = "FaceWithMaskDetected";
})(RecognitionError || (RecognitionError = {}));
